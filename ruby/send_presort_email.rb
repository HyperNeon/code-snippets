#!/usr/bin/env ruby

#
# Script to send an automated email
#

class Email
    attr_accessor :type, :from, :to, :subject, :content, :server
    
    def initialize(from, to, job, server)
        @from = from
        @to = to
        @job = job
        @server = server
    end
    
    def build_stall_email()
        @subject = "PRESORT: Presort Has Stalled On #{@job}"
        @content = "\n\nHello Team,\n\n\tThe automated presort script has stalled on the job #{@job}."\
                    " This generally means that this is a new job that has not yet been configured and the script is"\
                    " waiting for the correct job to be chosen. Please have the user who is currently running automated"\
                    " presort log on to #{@server} and select a job.\n\nThanks,\nYour Friendly Automated Presort Script"\
                    "\n\n\n*This email is generated by an automatic script and responses will not be received*"
    end
    
    def build_job_complete_email()
        @subject = "PRESORT: #{@job} Completed Successfully"
        @content = "\n\nHello Team,\n\n\tThe automated presort script has just finished running #{@job}."\
                   " If this is the last expected batch for this client it is now ok to begin Downloading CASS."\
                   "\n\nThanks,\nYour Friendly Automated Presort Script"\
                   "\n\n\n*This email is generated by an automated script and responses will not be received*"
        
    end
    
    def build_job_failed_email(failureMessage)
        @subject = "PRESORT: #{@job} FAILED"
        @content = "\n\nHello Team,\n\n\tThe automated presort script has failed while executing the job #{@job}."\
                    " The error message is:\n\n#{failureMessage}\n\nPlease have the user who is currently running automated"\
                    " presort log on to #{@server} and investigate this error. Presort will not be able to continue until"\
                    " this error is resolved.\n\nThanks,\nYour Friendly Automated Presort Script"\
                    "\n\n\n*This email is generated by an automatic script and responses will not be received*"
        
    end
    
    def send_email()
        `echo "#{@content}" | email -V -f "#{@from}" -n 'PRESORT NOTICE' -s "#{@subject}" -r /REDACTED/' #{@to}`
    end
    
    
end
from = "/REDACTED/"
#Changed to me for TEST
#to = /REDACTED/"
to = "/REDACTED/"
if ARGV.size < 3
    abort( "\nIncorrect number of arguments entered.\n Please add arguments: TYPE JOB SERVER [FAILUREMESSAGE]\nType can be: `stall`, `complete`, `fail`\n\n")
end
type = ARGV.shift
job = ARGV.shift
server = ARGV.shift
email = Email.new(from,to,job,server)

case type
    when "stall"
        email.build_stall_email
    when "complete"
        email.build_job_complete_email
    when "fail"
        #Need to remember to single quote text so it's not interpreted by bash
        email.build_job_failed_email(ARGV.shift)
end

email.send_email
    
